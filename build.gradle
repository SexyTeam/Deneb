task mkdir {
    group = "deneb"
    doLast {
        mkdir System.getProperty("user.home") + "/.minecraft/mods/1.12.2/"
    }
}

task rmOld(type: Delete) {
    group = "deneb"
    delete fileTree(System.getProperty("user.home") + "/.minecraft/mods/1.12.2/").matching {
        include "*-release.jar"
    }
}

task copy(type: Copy) {
    group = "deneb"
    from file("build/libs/")
    include '*-release.jar'
    into file(System.getProperty("user.home") + "/.minecraft/mods/1.12.2/")
}


buildscript {
    repositories {
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version project.modVersion
group project.modGroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = project.forgeVersion
    runDir = 'run'
    mappings = project.mcpVersion
    coreMod = 'com.deneb.client.mixin.MixinLoader'
    makeObfSourceJar = false
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
    maven {
        name = 'swt-repo'
        url = "http://maven-eclipse.github.io/maven"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    mavenCentral()
    jcenter()
}

dependencies {
    compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    compile(group: 'org.reflections', name: 'reflections', version: '0.9.11') {
        exclude group: 'com.google.guava', module: 'guava'
    }

	compile 'club.minnced:java-discord-rpc:v2.0.1'

    compile 'com.github.cabaletta:baritone:1.2.14'
    compile 'cabaletta:baritone-api:1.2'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // move _at.cfg into META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {

    dependencies {
        include(dependency('club.minnced:java-discord-rpc'))
        include(dependency('org.dom4j:dom4j'))
        include(dependency('org.javassist:javassist'))
        include(dependency('org.spongepowered:mixin'))
        include(dependency('org.yaml:snakeyaml'))
        include(dependency('org.reflections:reflections'))
        include(dependency('cabaletta:baritone-api'))
    }

    exclude 'LICENSE.txt' // exclude license.txt file after building jar
    exclude 'dummyThing' // can someone explain why this is here
    classifier = 'release'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.deneb.refmap.json'
}



reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.deneb.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'com.deneb.client.mixin.MixinLoader',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'deneb_at.cfg'
        )
    }
}

build.dependsOn(shadowJar)