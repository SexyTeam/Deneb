buildscript {
    repositories {
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version project.modVersion
group project.modGroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html

sourceCompatibility = targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}


repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
    maven {
        name = 'swt-repo'
        url = "http://maven-eclipse.github.io/maven"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    mavenCentral()
    jcenter()
}


minecraft {
    mappings channel: 'stable', version: '39-1.12'

    accessTransformer = file('src/main/resources/deneb_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'club.deneb.client.mixin.MixinLoader'
            property 'mixin.env.disableRefMap', 'true'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    compile
}

dependencies {
   minecraft "net.minecraftforge:forge:$project.forgeVersion"

    compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    compile(group: 'org.reflections', name: 'reflections', version: '0.9.11') {
        exclude group: 'com.google.guava', module: 'guava'
    }

	compile 'club.minnced:java-discord-rpc:v2.0.1'

    compile 'com.github.cabaletta:baritone:1.2.14'
    compile 'cabaletta:baritone-api:1.2'

    // Add everything in compile to implementation (compile)
    implementation configurations.compile
}

processResources {
    inputs.property 'version', project.modVersion
    inputs.property 'mcversion', project.forgeVersion

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.modVersion,
                'mcversion': project.forgeVersion
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // move _at.cfg into META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

mixin {
    defaultObfuscationEnv 'searge'
    add sourceSets.main, 'mixins.deneb.refmap.json'
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.deneb.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'club.deneb.client.mixin.MixinLoader',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'deneb_at.cfg'
        )
    }

    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    exclude 'LICENSE.txt' // exclude license.txt file after building jar

}